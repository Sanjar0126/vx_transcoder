// Code generated by protoc-gen-go. DO NOT EDIT.
// source: movie.proto

package content_service

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MovieFileObj struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FileId               string   `protobuf:"bytes,2,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	FileName             string   `protobuf:"bytes,3,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	Thumbnail            string   `protobuf:"bytes,4,opt,name=thumbnail,proto3" json:"thumbnail,omitempty"`
	Width                int32    `protobuf:"varint,5,opt,name=width,proto3" json:"width,omitempty"`
	Height               int32    `protobuf:"varint,6,opt,name=height,proto3" json:"height,omitempty"`
	Duration             int32    `protobuf:"varint,7,opt,name=duration,proto3" json:"duration,omitempty"`
	Status               string   `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	Stage                string   `protobuf:"bytes,9,opt,name=stage,proto3" json:"stage,omitempty"`
	Type                 string   `protobuf:"bytes,10,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MovieFileObj) Reset()         { *m = MovieFileObj{} }
func (m *MovieFileObj) String() string { return proto.CompactTextString(m) }
func (*MovieFileObj) ProtoMessage()    {}
func (*MovieFileObj) Descriptor() ([]byte, []int) {
	return fileDescriptor_fde087a4194eda75, []int{0}
}

func (m *MovieFileObj) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MovieFileObj.Unmarshal(m, b)
}
func (m *MovieFileObj) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MovieFileObj.Marshal(b, m, deterministic)
}
func (m *MovieFileObj) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MovieFileObj.Merge(m, src)
}
func (m *MovieFileObj) XXX_Size() int {
	return xxx_messageInfo_MovieFileObj.Size(m)
}
func (m *MovieFileObj) XXX_DiscardUnknown() {
	xxx_messageInfo_MovieFileObj.DiscardUnknown(m)
}

var xxx_messageInfo_MovieFileObj proto.InternalMessageInfo

func (m *MovieFileObj) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MovieFileObj) GetFileId() string {
	if m != nil {
		return m.FileId
	}
	return ""
}

func (m *MovieFileObj) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

func (m *MovieFileObj) GetThumbnail() string {
	if m != nil {
		return m.Thumbnail
	}
	return ""
}

func (m *MovieFileObj) GetWidth() int32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *MovieFileObj) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *MovieFileObj) GetDuration() int32 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *MovieFileObj) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *MovieFileObj) GetStage() string {
	if m != nil {
		return m.Stage
	}
	return ""
}

func (m *MovieFileObj) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type MovieSlim struct {
	Title                string                     `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Poster               string                     `protobuf:"bytes,2,opt,name=poster,proto3" json:"poster,omitempty"`
	Attributes           []*AttributeCommonResponse `protobuf:"bytes,3,rep,name=attributes,proto3" json:"attributes,omitempty"`
	Rate                 float32                    `protobuf:"fixed32,4,opt,name=rate,proto3" json:"rate,omitempty"`
	Trailers             []*MovieFileObj            `protobuf:"bytes,5,rep,name=trailers,proto3" json:"trailers,omitempty"`
	Category             string                     `protobuf:"bytes,6,opt,name=category,proto3" json:"category,omitempty"`
	AgeGroup             int32                      `protobuf:"varint,7,opt,name=age_group,json=ageGroup,proto3" json:"age_group,omitempty"`
	Country              []*CountryGetResponse      `protobuf:"bytes,8,rep,name=country,proto3" json:"country,omitempty"`
	File                 *MovieFileObj              `protobuf:"bytes,9,opt,name=file,proto3" json:"file,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *MovieSlim) Reset()         { *m = MovieSlim{} }
func (m *MovieSlim) String() string { return proto.CompactTextString(m) }
func (*MovieSlim) ProtoMessage()    {}
func (*MovieSlim) Descriptor() ([]byte, []int) {
	return fileDescriptor_fde087a4194eda75, []int{1}
}

func (m *MovieSlim) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MovieSlim.Unmarshal(m, b)
}
func (m *MovieSlim) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MovieSlim.Marshal(b, m, deterministic)
}
func (m *MovieSlim) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MovieSlim.Merge(m, src)
}
func (m *MovieSlim) XXX_Size() int {
	return xxx_messageInfo_MovieSlim.Size(m)
}
func (m *MovieSlim) XXX_DiscardUnknown() {
	xxx_messageInfo_MovieSlim.DiscardUnknown(m)
}

var xxx_messageInfo_MovieSlim proto.InternalMessageInfo

func (m *MovieSlim) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *MovieSlim) GetPoster() string {
	if m != nil {
		return m.Poster
	}
	return ""
}

func (m *MovieSlim) GetAttributes() []*AttributeCommonResponse {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *MovieSlim) GetRate() float32 {
	if m != nil {
		return m.Rate
	}
	return 0
}

func (m *MovieSlim) GetTrailers() []*MovieFileObj {
	if m != nil {
		return m.Trailers
	}
	return nil
}

func (m *MovieSlim) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *MovieSlim) GetAgeGroup() int32 {
	if m != nil {
		return m.AgeGroup
	}
	return 0
}

func (m *MovieSlim) GetCountry() []*CountryGetResponse {
	if m != nil {
		return m.Country
	}
	return nil
}

func (m *MovieSlim) GetFile() *MovieFileObj {
	if m != nil {
		return m.File
	}
	return nil
}

type Movie struct {
	Id                   string                     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title                string                     `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Slug                 string                     `protobuf:"bytes,3,opt,name=slug,proto3" json:"slug,omitempty"`
	Lang                 string                     `protobuf:"bytes,4,opt,name=lang,proto3" json:"lang,omitempty"`
	Description          string                     `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Plot                 string                     `protobuf:"bytes,6,opt,name=plot,proto3" json:"plot,omitempty"`
	Slogan               string                     `protobuf:"bytes,7,opt,name=slogan,proto3" json:"slogan,omitempty"`
	ReleaseYearStart     int32                      `protobuf:"varint,8,opt,name=release_year_start,json=releaseYearStart,proto3" json:"release_year_start,omitempty"`
	ReleaseYearEnd       int32                      `protobuf:"varint,9,opt,name=release_year_end,json=releaseYearEnd,proto3" json:"release_year_end,omitempty"`
	AgeGroup             int32                      `protobuf:"varint,10,opt,name=age_group,json=ageGroup,proto3" json:"age_group,omitempty"`
	Rating               float32                    `protobuf:"fixed32,11,opt,name=rating,proto3" json:"rating,omitempty"`
	Views                int32                      `protobuf:"varint,12,opt,name=views,proto3" json:"views,omitempty"`
	Rank                 float32                    `protobuf:"fixed32,13,opt,name=rank,proto3" json:"rank,omitempty"`
	Poster               string                     `protobuf:"bytes,14,opt,name=poster,proto3" json:"poster,omitempty"`
	ReviewsCount         *ReviewObj                 `protobuf:"bytes,15,opt,name=reviews_count,json=reviewsCount,proto3" json:"reviews_count,omitempty"`
	Status               string                     `protobuf:"bytes,16,opt,name=status,proto3" json:"status,omitempty"`
	StatusAction         []*StatusAction            `protobuf:"bytes,17,rep,name=status_action,json=statusAction,proto3" json:"status_action,omitempty"`
	OwnerId              string                     `protobuf:"bytes,18,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	Platform             *AllowedPlatform           `protobuf:"bytes,19,opt,name=platform,proto3" json:"platform,omitempty"`
	Category             string                     `protobuf:"bytes,20,opt,name=category,proto3" json:"category,omitempty"`
	Genres               []*GenreCommonResponse     `protobuf:"bytes,21,rep,name=genres,proto3" json:"genres,omitempty"`
	Staff                string                     `protobuf:"bytes,22,opt,name=staff,proto3" json:"staff,omitempty"`
	Attributes           []*AttributeCommonResponse `protobuf:"bytes,23,rep,name=attributes,proto3" json:"attributes,omitempty"`
	Country              []*CountryGetResponse      `protobuf:"bytes,24,rep,name=country,proto3" json:"country,omitempty"`
	Trailers             []*MovieFileObj            `protobuf:"bytes,25,rep,name=trailers,proto3" json:"trailers,omitempty"`
	File                 *MovieFileObj              `protobuf:"bytes,26,opt,name=file,proto3" json:"file,omitempty"`
	PlatformRating       []*Rating                  `protobuf:"bytes,27,rep,name=platform_rating,json=platformRating,proto3" json:"platform_rating,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *Movie) Reset()         { *m = Movie{} }
func (m *Movie) String() string { return proto.CompactTextString(m) }
func (*Movie) ProtoMessage()    {}
func (*Movie) Descriptor() ([]byte, []int) {
	return fileDescriptor_fde087a4194eda75, []int{2}
}

func (m *Movie) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Movie.Unmarshal(m, b)
}
func (m *Movie) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Movie.Marshal(b, m, deterministic)
}
func (m *Movie) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Movie.Merge(m, src)
}
func (m *Movie) XXX_Size() int {
	return xxx_messageInfo_Movie.Size(m)
}
func (m *Movie) XXX_DiscardUnknown() {
	xxx_messageInfo_Movie.DiscardUnknown(m)
}

var xxx_messageInfo_Movie proto.InternalMessageInfo

func (m *Movie) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Movie) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Movie) GetSlug() string {
	if m != nil {
		return m.Slug
	}
	return ""
}

func (m *Movie) GetLang() string {
	if m != nil {
		return m.Lang
	}
	return ""
}

func (m *Movie) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Movie) GetPlot() string {
	if m != nil {
		return m.Plot
	}
	return ""
}

func (m *Movie) GetSlogan() string {
	if m != nil {
		return m.Slogan
	}
	return ""
}

func (m *Movie) GetReleaseYearStart() int32 {
	if m != nil {
		return m.ReleaseYearStart
	}
	return 0
}

func (m *Movie) GetReleaseYearEnd() int32 {
	if m != nil {
		return m.ReleaseYearEnd
	}
	return 0
}

func (m *Movie) GetAgeGroup() int32 {
	if m != nil {
		return m.AgeGroup
	}
	return 0
}

func (m *Movie) GetRating() float32 {
	if m != nil {
		return m.Rating
	}
	return 0
}

func (m *Movie) GetViews() int32 {
	if m != nil {
		return m.Views
	}
	return 0
}

func (m *Movie) GetRank() float32 {
	if m != nil {
		return m.Rank
	}
	return 0
}

func (m *Movie) GetPoster() string {
	if m != nil {
		return m.Poster
	}
	return ""
}

func (m *Movie) GetReviewsCount() *ReviewObj {
	if m != nil {
		return m.ReviewsCount
	}
	return nil
}

func (m *Movie) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Movie) GetStatusAction() []*StatusAction {
	if m != nil {
		return m.StatusAction
	}
	return nil
}

func (m *Movie) GetOwnerId() string {
	if m != nil {
		return m.OwnerId
	}
	return ""
}

func (m *Movie) GetPlatform() *AllowedPlatform {
	if m != nil {
		return m.Platform
	}
	return nil
}

func (m *Movie) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *Movie) GetGenres() []*GenreCommonResponse {
	if m != nil {
		return m.Genres
	}
	return nil
}

func (m *Movie) GetStaff() string {
	if m != nil {
		return m.Staff
	}
	return ""
}

func (m *Movie) GetAttributes() []*AttributeCommonResponse {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *Movie) GetCountry() []*CountryGetResponse {
	if m != nil {
		return m.Country
	}
	return nil
}

func (m *Movie) GetTrailers() []*MovieFileObj {
	if m != nil {
		return m.Trailers
	}
	return nil
}

func (m *Movie) GetFile() *MovieFileObj {
	if m != nil {
		return m.File
	}
	return nil
}

func (m *Movie) GetPlatformRating() []*Rating {
	if m != nil {
		return m.PlatformRating
	}
	return nil
}

func init() {
	proto.RegisterType((*MovieFileObj)(nil), "content.MovieFileObj")
	proto.RegisterType((*MovieSlim)(nil), "content.MovieSlim")
	proto.RegisterType((*Movie)(nil), "content.Movie")
}

func init() { proto.RegisterFile("movie.proto", fileDescriptor_fde087a4194eda75) }

var fileDescriptor_fde087a4194eda75 = []byte{
	// 752 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x55, 0x4b, 0x6f, 0xe3, 0x36,
	0x10, 0x86, 0x1d, 0xcb, 0x0f, 0xfa, 0x95, 0xb2, 0x79, 0x30, 0x4e, 0x0e, 0x46, 0x4e, 0x2e, 0x50,
	0xa4, 0x68, 0x9b, 0xa2, 0x45, 0x4f, 0x4d, 0x83, 0x36, 0xc8, 0xa1, 0xdd, 0x85, 0x72, 0xda, 0xbd,
	0x08, 0xb4, 0x35, 0x96, 0xb9, 0x91, 0x48, 0x81, 0xa4, 0x63, 0xf8, 0x27, 0xee, 0x8f, 0xd8, 0xbf,
	0xb2, 0x58, 0x70, 0x44, 0x29, 0xb2, 0x17, 0x8b, 0x7d, 0xdc, 0xf8, 0x7d, 0x33, 0x22, 0x07, 0xdf,
	0x7c, 0x33, 0x22, 0xfd, 0x4c, 0x3d, 0x09, 0xb8, 0xca, 0xb5, 0xb2, 0x8a, 0x76, 0x16, 0x4a, 0x5a,
	0x90, 0x76, 0x32, 0x58, 0xa8, 0x2c, 0x53, 0xb2, 0xa0, 0x27, 0xfd, 0x04, 0xa4, 0xf6, 0x39, 0x93,
	0x31, 0xb7, 0x56, 0x8b, 0xf9, 0xda, 0x96, 0xc4, 0x70, 0xa1, 0xd6, 0xd2, 0xea, 0x6d, 0x01, 0x2f,
	0xdf, 0x37, 0xc8, 0xe0, 0x3f, 0x77, 0xe7, 0xbf, 0x22, 0x85, 0x17, 0xf3, 0x37, 0x74, 0x44, 0x9a,
	0x22, 0x66, 0x8d, 0x69, 0x63, 0xd6, 0x0b, 0x9b, 0x22, 0xa6, 0xa7, 0xa4, 0xb3, 0x14, 0x29, 0x44,
	0x22, 0x66, 0x4d, 0x24, 0xdb, 0x0e, 0xde, 0xc7, 0xf4, 0x9c, 0xf4, 0x30, 0x20, 0x79, 0x06, 0xec,
	0x00, 0x43, 0x5d, 0x47, 0xfc, 0xcf, 0x33, 0xa0, 0x17, 0xa4, 0x67, 0x57, 0xeb, 0x6c, 0x2e, 0xb9,
	0x48, 0x59, 0x0b, 0x83, 0xcf, 0x04, 0x3d, 0x22, 0xc1, 0x46, 0xc4, 0x76, 0xc5, 0x82, 0x69, 0x63,
	0x16, 0x84, 0x05, 0xa0, 0x27, 0xa4, 0xbd, 0x02, 0x91, 0xac, 0x2c, 0x6b, 0x23, 0xed, 0x11, 0x9d,
	0x90, 0x6e, 0xbc, 0xd6, 0xdc, 0x0a, 0x25, 0x59, 0x07, 0x23, 0x15, 0x76, 0xdf, 0x18, 0xcb, 0xed,
	0xda, 0xb0, 0x6e, 0x51, 0x5c, 0x81, 0xdc, 0x0b, 0xc6, 0xf2, 0x04, 0x58, 0x0f, 0xe9, 0x02, 0x50,
	0x4a, 0x5a, 0x76, 0x9b, 0x03, 0x23, 0x48, 0xe2, 0xf9, 0xf2, 0x5d, 0x93, 0xf4, 0x50, 0x80, 0x87,
	0x54, 0x64, 0xee, 0x3b, 0x2b, 0x6c, 0x0a, 0x5e, 0x80, 0x02, 0xb8, 0x57, 0x72, 0x65, 0x2c, 0xe8,
	0x52, 0x82, 0x02, 0xd1, 0xbf, 0x08, 0xa9, 0xe4, 0x35, 0xec, 0x60, 0x7a, 0x30, 0xeb, 0xff, 0x32,
	0xbd, 0xf2, 0x5d, 0xb9, 0xba, 0x29, 0x43, 0xb7, 0xd8, 0x9d, 0x10, 0x4c, 0xae, 0xa4, 0x81, 0xb0,
	0xf6, 0x8d, 0xab, 0x48, 0x73, 0x0b, 0x28, 0x51, 0x33, 0xc4, 0x33, 0xfd, 0x99, 0x74, 0xad, 0xe6,
	0x22, 0x05, 0x6d, 0x58, 0x80, 0x77, 0x1e, 0x57, 0x77, 0xd6, 0x5b, 0x15, 0x56, 0x69, 0x4e, 0xa2,
	0x05, 0xb7, 0x90, 0x28, 0xbd, 0x45, 0xf1, 0x7a, 0x61, 0x85, 0x5d, 0x9f, 0x78, 0x02, 0x51, 0xa2,
	0xd5, 0x3a, 0x2f, 0xf5, 0xe3, 0x09, 0xdc, 0x39, 0x4c, 0x7f, 0x23, 0x1d, 0xef, 0x07, 0xd6, 0xc5,
	0xa7, 0xce, 0xab, 0xa7, 0x6e, 0x0b, 0xfe, 0x0e, 0x6c, 0x55, 0x79, 0x99, 0x4b, 0x7f, 0x20, 0x2d,
	0xd7, 0x6a, 0x54, 0xf7, 0x93, 0xe5, 0x61, 0xca, 0xe5, 0xdb, 0x0e, 0x09, 0x90, 0xfe, 0xc8, 0x59,
	0x95, 0xd6, 0xcd, 0xba, 0xd6, 0x94, 0xb4, 0x4c, 0xba, 0x4e, 0xbc, 0xa3, 0xf0, 0xec, 0xb8, 0x94,
	0xcb, 0xc4, 0x1b, 0x09, 0xcf, 0x74, 0x4a, 0xfa, 0x31, 0x98, 0x85, 0x16, 0x39, 0x1a, 0x23, 0xc0,
	0x50, 0x9d, 0x72, 0x5f, 0xe5, 0xa9, 0xb2, 0x5e, 0x10, 0x3c, 0xa3, 0x5f, 0x52, 0x95, 0xf0, 0xc2,
	0x49, 0xce, 0x2f, 0x88, 0xe8, 0x8f, 0x84, 0x6a, 0x48, 0x81, 0x1b, 0x88, 0xb6, 0xc0, 0x75, 0x64,
	0x2c, 0xd7, 0x16, 0x3d, 0x15, 0x84, 0x87, 0x3e, 0xf2, 0x0a, 0xb8, 0x7e, 0x70, 0x3c, 0x9d, 0x91,
	0xc3, 0x9d, 0x6c, 0x90, 0x31, 0x4a, 0x11, 0x84, 0xa3, 0x5a, 0xee, 0x3f, 0x32, 0xde, 0x15, 0x9f,
	0xec, 0x89, 0x7f, 0x42, 0xda, 0xce, 0xc6, 0x32, 0x61, 0x7d, 0x6c, 0xbf, 0x47, 0x4e, 0x98, 0x27,
	0x01, 0x1b, 0xc3, 0x06, 0xc5, 0x78, 0x20, 0x28, 0xac, 0x22, 0x1f, 0xd9, 0xb0, 0xb4, 0x8a, 0x7c,
	0xac, 0x19, 0x73, 0xb4, 0x63, 0xcc, 0xdf, 0xc9, 0x50, 0x03, 0x7e, 0x16, 0x61, 0xcb, 0xd8, 0x18,
	0x1b, 0x45, 0xab, 0x46, 0x85, 0x18, 0x75, 0x5d, 0x1a, 0xf8, 0x44, 0x6c, 0x77, 0x6d, 0x9e, 0x0e,
	0x77, 0xe6, 0xe9, 0x4f, 0x32, 0x2c, 0x4e, 0x11, 0x5f, 0xa0, 0xde, 0xdf, 0xed, 0x19, 0xf3, 0x01,
	0xa3, 0x37, 0x18, 0x0c, 0x07, 0xa6, 0x86, 0xe8, 0x19, 0xe9, 0xaa, 0x8d, 0x04, 0xed, 0x56, 0x08,
	0xc5, 0x5b, 0x3b, 0x88, 0xef, 0x63, 0x7a, 0x4d, 0xba, 0x79, 0xca, 0xed, 0x52, 0xe9, 0x8c, 0x7d,
	0x8f, 0x25, 0xb2, 0xe7, 0xf1, 0x49, 0x53, 0xb5, 0x81, 0xf8, 0xa5, 0x8f, 0x87, 0x55, 0xe6, 0x8e,
	0xdb, 0x8f, 0xf6, 0xdc, 0x7e, 0x4d, 0xda, 0xb8, 0xfe, 0x0c, 0x3b, 0xc6, 0x0a, 0x2f, 0xaa, 0xfb,
	0xee, 0x1c, 0xbd, 0x37, 0x8a, 0x3e, 0xd7, 0xaf, 0x8b, 0xe5, 0x92, 0x9d, 0x54, 0xeb, 0x62, 0xb9,
	0xdc, 0x1b, 0xef, 0xd3, 0x6f, 0x18, 0xef, 0xda, 0x78, 0xb1, 0xaf, 0x18, 0xaf, 0xfa, 0x06, 0x38,
	0xfb, 0xb2, 0x0d, 0x50, 0x4e, 0xe4, 0xe4, 0xb3, 0x13, 0x49, 0xff, 0x20, 0xe3, 0x52, 0xca, 0xc8,
	0xfb, 0xef, 0x1c, 0x1f, 0x19, 0x3f, 0xdb, 0x03, 0xe9, 0x70, 0x54, 0xe6, 0x15, 0xf8, 0xef, 0xc9,
	0x6b, 0x96, 0x80, 0xc4, 0x1f, 0xc7, 0x4f, 0x3e, 0x35, 0x32, 0xa0, 0x9f, 0xc4, 0x02, 0xe6, 0x6d,
	0xa4, 0x7f, 0xfd, 0x10, 0x00, 0x00, 0xff, 0xff, 0xaf, 0x19, 0x7a, 0x3c, 0xa2, 0x06, 0x00, 0x00,
}
