// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.6.1
// source: movie_season.proto

package content_service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MovieEpisodesAddRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title         string               `protobuf:"bytes,1,opt,name=title,proto3" json:"title"`
	EpisodeNumber int32                `protobuf:"varint,2,opt,name=episode_number,json=episodeNumber,proto3" json:"episode_number"`
	File          *MovieFileObjRequest `protobuf:"bytes,3,opt,name=file,proto3" json:"file"`
	Plot          string               `protobuf:"bytes,4,opt,name=plot,proto3" json:"plot"`
	Genres        []string             `protobuf:"bytes,5,rep,name=genres,proto3" json:"genres"`
	Attributes    []string             `protobuf:"bytes,6,rep,name=attributes,proto3" json:"attributes"`
	MovieSlug     string               `protobuf:"bytes,7,opt,name=movie_slug,json=movieSlug,proto3" json:"movie_slug"`
	SeasonNumber  int32                `protobuf:"varint,8,opt,name=season_number,json=seasonNumber,proto3" json:"season_number"`
}

func (x *MovieEpisodesAddRequest) Reset() {
	*x = MovieEpisodesAddRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_season_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovieEpisodesAddRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovieEpisodesAddRequest) ProtoMessage() {}

func (x *MovieEpisodesAddRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_season_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovieEpisodesAddRequest.ProtoReflect.Descriptor instead.
func (*MovieEpisodesAddRequest) Descriptor() ([]byte, []int) {
	return file_movie_season_proto_rawDescGZIP(), []int{0}
}

func (x *MovieEpisodesAddRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MovieEpisodesAddRequest) GetEpisodeNumber() int32 {
	if x != nil {
		return x.EpisodeNumber
	}
	return 0
}

func (x *MovieEpisodesAddRequest) GetFile() *MovieFileObjRequest {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *MovieEpisodesAddRequest) GetPlot() string {
	if x != nil {
		return x.Plot
	}
	return ""
}

func (x *MovieEpisodesAddRequest) GetGenres() []string {
	if x != nil {
		return x.Genres
	}
	return nil
}

func (x *MovieEpisodesAddRequest) GetAttributes() []string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *MovieEpisodesAddRequest) GetMovieSlug() string {
	if x != nil {
		return x.MovieSlug
	}
	return ""
}

func (x *MovieEpisodesAddRequest) GetSeasonNumber() int32 {
	if x != nil {
		return x.SeasonNumber
	}
	return 0
}

type MovieEpisodesUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title      string               `protobuf:"bytes,1,opt,name=title,proto3" json:"title"`
	File       *MovieFileObjRequest `protobuf:"bytes,2,opt,name=file,proto3" json:"file"`
	Plot       string               `protobuf:"bytes,3,opt,name=plot,proto3" json:"plot"`
	Genres     []string             `protobuf:"bytes,4,rep,name=genres,proto3" json:"genres"`
	Attributes []string             `protobuf:"bytes,5,rep,name=attributes,proto3" json:"attributes"`
	Status     string               `protobuf:"bytes,6,opt,name=status,proto3" json:"status"`
}

func (x *MovieEpisodesUpdateRequest) Reset() {
	*x = MovieEpisodesUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_season_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovieEpisodesUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovieEpisodesUpdateRequest) ProtoMessage() {}

func (x *MovieEpisodesUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_season_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovieEpisodesUpdateRequest.ProtoReflect.Descriptor instead.
func (*MovieEpisodesUpdateRequest) Descriptor() ([]byte, []int) {
	return file_movie_season_proto_rawDescGZIP(), []int{1}
}

func (x *MovieEpisodesUpdateRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MovieEpisodesUpdateRequest) GetFile() *MovieFileObjRequest {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *MovieEpisodesUpdateRequest) GetPlot() string {
	if x != nil {
		return x.Plot
	}
	return ""
}

func (x *MovieEpisodesUpdateRequest) GetGenres() []string {
	if x != nil {
		return x.Genres
	}
	return nil
}

func (x *MovieEpisodesUpdateRequest) GetAttributes() []string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *MovieEpisodesUpdateRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type MovieEpisodeUpdatePayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title         string               `protobuf:"bytes,1,opt,name=title,proto3" json:"title"`
	File          *MovieFileObjRequest `protobuf:"bytes,2,opt,name=file,proto3" json:"file"`
	Plot          string               `protobuf:"bytes,3,opt,name=plot,proto3" json:"plot"`
	Genres        []string             `protobuf:"bytes,4,rep,name=genres,proto3" json:"genres"`
	Attributes    []string             `protobuf:"bytes,5,rep,name=attributes,proto3" json:"attributes"`
	Lang          string               `protobuf:"bytes,6,opt,name=lang,proto3" json:"lang"`
	Status        string               `protobuf:"bytes,7,opt,name=status,proto3" json:"status"`
	SeasonNumber  int32                `protobuf:"varint,8,opt,name=season_number,json=seasonNumber,proto3" json:"season_number"`
	EpisodeNumber int32                `protobuf:"varint,9,opt,name=episode_number,json=episodeNumber,proto3" json:"episode_number"`
	MovieSlug     string               `protobuf:"bytes,10,opt,name=movie_slug,json=movieSlug,proto3" json:"movie_slug"`
	MegogoId      string               `protobuf:"bytes,11,opt,name=megogo_id,json=megogoId,proto3" json:"megogo_id"`
}

func (x *MovieEpisodeUpdatePayload) Reset() {
	*x = MovieEpisodeUpdatePayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_season_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovieEpisodeUpdatePayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovieEpisodeUpdatePayload) ProtoMessage() {}

func (x *MovieEpisodeUpdatePayload) ProtoReflect() protoreflect.Message {
	mi := &file_movie_season_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovieEpisodeUpdatePayload.ProtoReflect.Descriptor instead.
func (*MovieEpisodeUpdatePayload) Descriptor() ([]byte, []int) {
	return file_movie_season_proto_rawDescGZIP(), []int{2}
}

func (x *MovieEpisodeUpdatePayload) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MovieEpisodeUpdatePayload) GetFile() *MovieFileObjRequest {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *MovieEpisodeUpdatePayload) GetPlot() string {
	if x != nil {
		return x.Plot
	}
	return ""
}

func (x *MovieEpisodeUpdatePayload) GetGenres() []string {
	if x != nil {
		return x.Genres
	}
	return nil
}

func (x *MovieEpisodeUpdatePayload) GetAttributes() []string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *MovieEpisodeUpdatePayload) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *MovieEpisodeUpdatePayload) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *MovieEpisodeUpdatePayload) GetSeasonNumber() int32 {
	if x != nil {
		return x.SeasonNumber
	}
	return 0
}

func (x *MovieEpisodeUpdatePayload) GetEpisodeNumber() int32 {
	if x != nil {
		return x.EpisodeNumber
	}
	return 0
}

func (x *MovieEpisodeUpdatePayload) GetMovieSlug() string {
	if x != nil {
		return x.MovieSlug
	}
	return ""
}

func (x *MovieEpisodeUpdatePayload) GetMegogoId() string {
	if x != nil {
		return x.MegogoId
	}
	return ""
}

type MovieEpisodeRemoveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovieSlug     string `protobuf:"bytes,1,opt,name=movie_slug,json=movieSlug,proto3" json:"movie_slug"`
	SeasonNumber  int32  `protobuf:"varint,2,opt,name=season_number,json=seasonNumber,proto3" json:"season_number"`
	EpisodeNumber int32  `protobuf:"varint,3,opt,name=episode_number,json=episodeNumber,proto3" json:"episode_number"`
	Lang          string `protobuf:"bytes,4,opt,name=lang,proto3" json:"lang"`
}

func (x *MovieEpisodeRemoveRequest) Reset() {
	*x = MovieEpisodeRemoveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_season_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovieEpisodeRemoveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovieEpisodeRemoveRequest) ProtoMessage() {}

func (x *MovieEpisodeRemoveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_season_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovieEpisodeRemoveRequest.ProtoReflect.Descriptor instead.
func (*MovieEpisodeRemoveRequest) Descriptor() ([]byte, []int) {
	return file_movie_season_proto_rawDescGZIP(), []int{3}
}

func (x *MovieEpisodeRemoveRequest) GetMovieSlug() string {
	if x != nil {
		return x.MovieSlug
	}
	return ""
}

func (x *MovieEpisodeRemoveRequest) GetSeasonNumber() int32 {
	if x != nil {
		return x.SeasonNumber
	}
	return 0
}

func (x *MovieEpisodeRemoveRequest) GetEpisodeNumber() int32 {
	if x != nil {
		return x.EpisodeNumber
	}
	return 0
}

func (x *MovieEpisodeRemoveRequest) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

type MovieEpisodes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string                     `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	Title         string                     `protobuf:"bytes,2,opt,name=title,proto3" json:"title"`
	EpisodeNumber int32                      `protobuf:"varint,3,opt,name=episode_number,json=episodeNumber,proto3" json:"episode_number"`
	Status        string                     `protobuf:"bytes,4,opt,name=status,proto3" json:"status"`
	StatusAction  []*StatusActionRequest     `protobuf:"bytes,5,rep,name=status_action,json=statusAction,proto3" json:"status_action"`
	File          *MovieFileObj              `protobuf:"bytes,6,opt,name=file,proto3" json:"file"`
	Plot          string                     `protobuf:"bytes,7,opt,name=plot,proto3" json:"plot"`
	Genres        []*GenreCommonResponse     `protobuf:"bytes,8,rep,name=genres,proto3" json:"genres"`
	Attributes    []*AttributeCommonResponse `protobuf:"bytes,9,rep,name=attributes,proto3" json:"attributes"`
	Duration      int32                      `protobuf:"varint,10,opt,name=duration,proto3" json:"duration"`
	MegogoId      string                     `protobuf:"bytes,11,opt,name=megogo_id,json=megogoId,proto3" json:"megogo_id"`
}

func (x *MovieEpisodes) Reset() {
	*x = MovieEpisodes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_season_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovieEpisodes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovieEpisodes) ProtoMessage() {}

func (x *MovieEpisodes) ProtoReflect() protoreflect.Message {
	mi := &file_movie_season_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovieEpisodes.ProtoReflect.Descriptor instead.
func (*MovieEpisodes) Descriptor() ([]byte, []int) {
	return file_movie_season_proto_rawDescGZIP(), []int{4}
}

func (x *MovieEpisodes) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MovieEpisodes) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MovieEpisodes) GetEpisodeNumber() int32 {
	if x != nil {
		return x.EpisodeNumber
	}
	return 0
}

func (x *MovieEpisodes) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *MovieEpisodes) GetStatusAction() []*StatusActionRequest {
	if x != nil {
		return x.StatusAction
	}
	return nil
}

func (x *MovieEpisodes) GetFile() *MovieFileObj {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *MovieEpisodes) GetPlot() string {
	if x != nil {
		return x.Plot
	}
	return ""
}

func (x *MovieEpisodes) GetGenres() []*GenreCommonResponse {
	if x != nil {
		return x.Genres
	}
	return nil
}

func (x *MovieEpisodes) GetAttributes() []*AttributeCommonResponse {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *MovieEpisodes) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *MovieEpisodes) GetMegogoId() string {
	if x != nil {
		return x.MegogoId
	}
	return ""
}

type MovieSeasonCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title            string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title"`
	Trailers         []*MovieFileObjRequest `protobuf:"bytes,2,rep,name=trailers,proto3" json:"trailers"`
	Poster           string                 `protobuf:"bytes,3,opt,name=poster,proto3" json:"poster"`
	ReleaseYearStart int32                  `protobuf:"varint,4,opt,name=release_year_start,json=releaseYearStart,proto3" json:"release_year_start"`
	ReleaseYearEnd   int32                  `protobuf:"varint,5,opt,name=release_year_end,json=releaseYearEnd,proto3" json:"release_year_end"`
	Plot             string                 `protobuf:"bytes,6,opt,name=plot,proto3" json:"plot"`
	Views            int32                  `protobuf:"varint,7,opt,name=views,proto3" json:"views"`
	Attributes       []string               `protobuf:"bytes,8,rep,name=attributes,proto3" json:"attributes"`
	SeasonNumber     int32                  `protobuf:"varint,9,opt,name=season_number,json=seasonNumber,proto3" json:"season_number"`
	MovieSlug        string                 `protobuf:"bytes,10,opt,name=movie_slug,json=movieSlug,proto3" json:"movie_slug"`
}

func (x *MovieSeasonCreateRequest) Reset() {
	*x = MovieSeasonCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_season_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovieSeasonCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovieSeasonCreateRequest) ProtoMessage() {}

func (x *MovieSeasonCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_season_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovieSeasonCreateRequest.ProtoReflect.Descriptor instead.
func (*MovieSeasonCreateRequest) Descriptor() ([]byte, []int) {
	return file_movie_season_proto_rawDescGZIP(), []int{5}
}

func (x *MovieSeasonCreateRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MovieSeasonCreateRequest) GetTrailers() []*MovieFileObjRequest {
	if x != nil {
		return x.Trailers
	}
	return nil
}

func (x *MovieSeasonCreateRequest) GetPoster() string {
	if x != nil {
		return x.Poster
	}
	return ""
}

func (x *MovieSeasonCreateRequest) GetReleaseYearStart() int32 {
	if x != nil {
		return x.ReleaseYearStart
	}
	return 0
}

func (x *MovieSeasonCreateRequest) GetReleaseYearEnd() int32 {
	if x != nil {
		return x.ReleaseYearEnd
	}
	return 0
}

func (x *MovieSeasonCreateRequest) GetPlot() string {
	if x != nil {
		return x.Plot
	}
	return ""
}

func (x *MovieSeasonCreateRequest) GetViews() int32 {
	if x != nil {
		return x.Views
	}
	return 0
}

func (x *MovieSeasonCreateRequest) GetAttributes() []string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *MovieSeasonCreateRequest) GetSeasonNumber() int32 {
	if x != nil {
		return x.SeasonNumber
	}
	return 0
}

func (x *MovieSeasonCreateRequest) GetMovieSlug() string {
	if x != nil {
		return x.MovieSlug
	}
	return ""
}

type MovieSeasonCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slug string `protobuf:"bytes,1,opt,name=slug,proto3" json:"slug"`
}

func (x *MovieSeasonCreateResponse) Reset() {
	*x = MovieSeasonCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_season_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovieSeasonCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovieSeasonCreateResponse) ProtoMessage() {}

func (x *MovieSeasonCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_season_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovieSeasonCreateResponse.ProtoReflect.Descriptor instead.
func (*MovieSeasonCreateResponse) Descriptor() ([]byte, []int) {
	return file_movie_season_proto_rawDescGZIP(), []int{6}
}

func (x *MovieSeasonCreateResponse) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

type MovieSeasonGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string                     `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	Title            string                     `protobuf:"bytes,2,opt,name=title,proto3" json:"title"`
	Trailers         []*MovieFileObj            `protobuf:"bytes,3,rep,name=trailers,proto3" json:"trailers"`
	Poster           string                     `protobuf:"bytes,4,opt,name=poster,proto3" json:"poster"`
	ReleaseYearStart int32                      `protobuf:"varint,5,opt,name=release_year_start,json=releaseYearStart,proto3" json:"release_year_start"`
	ReleaseYearEnd   int32                      `protobuf:"varint,6,opt,name=release_year_end,json=releaseYearEnd,proto3" json:"release_year_end"`
	Plot             string                     `protobuf:"bytes,7,opt,name=plot,proto3" json:"plot"`
	Views            int32                      `protobuf:"varint,8,opt,name=views,proto3" json:"views"`
	Status           string                     `protobuf:"bytes,9,opt,name=status,proto3" json:"status"`
	StatusAction     []*StatusActionRequest     `protobuf:"bytes,10,rep,name=status_action,json=statusAction,proto3" json:"status_action"`
	Attributes       []*AttributeCommonResponse `protobuf:"bytes,11,rep,name=attributes,proto3" json:"attributes"`
	SeasonNumber     int32                      `protobuf:"varint,12,opt,name=season_number,json=seasonNumber,proto3" json:"season_number"`
	Episodes         []*MovieEpisodes           `protobuf:"bytes,13,rep,name=episodes,proto3" json:"episodes"`
	MovieSlug        string                     `protobuf:"bytes,14,opt,name=movie_slug,json=movieSlug,proto3" json:"movie_slug"`
	Slug             string                     `protobuf:"bytes,15,opt,name=slug,proto3" json:"slug"`
	Lang             string                     `protobuf:"bytes,16,opt,name=lang,proto3" json:"lang"`
	CreatedAt        string                     `protobuf:"bytes,17,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	UpdatedAt        string                     `protobuf:"bytes,18,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`
}

func (x *MovieSeasonGetResponse) Reset() {
	*x = MovieSeasonGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_season_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovieSeasonGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovieSeasonGetResponse) ProtoMessage() {}

func (x *MovieSeasonGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_season_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovieSeasonGetResponse.ProtoReflect.Descriptor instead.
func (*MovieSeasonGetResponse) Descriptor() ([]byte, []int) {
	return file_movie_season_proto_rawDescGZIP(), []int{7}
}

func (x *MovieSeasonGetResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MovieSeasonGetResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MovieSeasonGetResponse) GetTrailers() []*MovieFileObj {
	if x != nil {
		return x.Trailers
	}
	return nil
}

func (x *MovieSeasonGetResponse) GetPoster() string {
	if x != nil {
		return x.Poster
	}
	return ""
}

func (x *MovieSeasonGetResponse) GetReleaseYearStart() int32 {
	if x != nil {
		return x.ReleaseYearStart
	}
	return 0
}

func (x *MovieSeasonGetResponse) GetReleaseYearEnd() int32 {
	if x != nil {
		return x.ReleaseYearEnd
	}
	return 0
}

func (x *MovieSeasonGetResponse) GetPlot() string {
	if x != nil {
		return x.Plot
	}
	return ""
}

func (x *MovieSeasonGetResponse) GetViews() int32 {
	if x != nil {
		return x.Views
	}
	return 0
}

func (x *MovieSeasonGetResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *MovieSeasonGetResponse) GetStatusAction() []*StatusActionRequest {
	if x != nil {
		return x.StatusAction
	}
	return nil
}

func (x *MovieSeasonGetResponse) GetAttributes() []*AttributeCommonResponse {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *MovieSeasonGetResponse) GetSeasonNumber() int32 {
	if x != nil {
		return x.SeasonNumber
	}
	return 0
}

func (x *MovieSeasonGetResponse) GetEpisodes() []*MovieEpisodes {
	if x != nil {
		return x.Episodes
	}
	return nil
}

func (x *MovieSeasonGetResponse) GetMovieSlug() string {
	if x != nil {
		return x.MovieSlug
	}
	return ""
}

func (x *MovieSeasonGetResponse) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *MovieSeasonGetResponse) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *MovieSeasonGetResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *MovieSeasonGetResponse) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type MovieSeasonGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slug          string `protobuf:"bytes,1,opt,name=slug,proto3" json:"slug"`
	SeasonNumber  int32  `protobuf:"varint,2,opt,name=season_number,json=seasonNumber,proto3" json:"season_number"`
	Lang          string `protobuf:"bytes,3,opt,name=lang,proto3" json:"lang"`
	EpisodeNumber int32  `protobuf:"varint,4,opt,name=episode_number,json=episodeNumber,proto3" json:"episode_number"`
}

func (x *MovieSeasonGetRequest) Reset() {
	*x = MovieSeasonGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_season_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovieSeasonGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovieSeasonGetRequest) ProtoMessage() {}

func (x *MovieSeasonGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_season_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovieSeasonGetRequest.ProtoReflect.Descriptor instead.
func (*MovieSeasonGetRequest) Descriptor() ([]byte, []int) {
	return file_movie_season_proto_rawDescGZIP(), []int{8}
}

func (x *MovieSeasonGetRequest) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *MovieSeasonGetRequest) GetSeasonNumber() int32 {
	if x != nil {
		return x.SeasonNumber
	}
	return 0
}

func (x *MovieSeasonGetRequest) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *MovieSeasonGetRequest) GetEpisodeNumber() int32 {
	if x != nil {
		return x.EpisodeNumber
	}
	return 0
}

type MovieSeasonGetAllRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovieSlug string `protobuf:"bytes,1,opt,name=movie_slug,json=movieSlug,proto3" json:"movie_slug"`
	Lang      string `protobuf:"bytes,2,opt,name=lang,proto3" json:"lang"`
	Page      int32  `protobuf:"varint,3,opt,name=page,proto3" json:"page"`
	Limit     int32  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit"`
	Status    string `protobuf:"bytes,5,opt,name=status,proto3" json:"status"`
}

func (x *MovieSeasonGetAllRequest) Reset() {
	*x = MovieSeasonGetAllRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_season_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovieSeasonGetAllRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovieSeasonGetAllRequest) ProtoMessage() {}

func (x *MovieSeasonGetAllRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_season_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovieSeasonGetAllRequest.ProtoReflect.Descriptor instead.
func (*MovieSeasonGetAllRequest) Descriptor() ([]byte, []int) {
	return file_movie_season_proto_rawDescGZIP(), []int{9}
}

func (x *MovieSeasonGetAllRequest) GetMovieSlug() string {
	if x != nil {
		return x.MovieSlug
	}
	return ""
}

func (x *MovieSeasonGetAllRequest) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *MovieSeasonGetAllRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *MovieSeasonGetAllRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *MovieSeasonGetAllRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type MovieSeasonDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slug string `protobuf:"bytes,1,opt,name=slug,proto3" json:"slug"`
}

func (x *MovieSeasonDeleteRequest) Reset() {
	*x = MovieSeasonDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_season_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovieSeasonDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovieSeasonDeleteRequest) ProtoMessage() {}

func (x *MovieSeasonDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_season_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovieSeasonDeleteRequest.ProtoReflect.Descriptor instead.
func (*MovieSeasonDeleteRequest) Descriptor() ([]byte, []int) {
	return file_movie_season_proto_rawDescGZIP(), []int{10}
}

func (x *MovieSeasonDeleteRequest) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

type MovieSeasonGetAllResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Objects []*MovieSeasonGetResponse `protobuf:"bytes,1,rep,name=objects,proto3" json:"objects"`
	Count   int32                     `protobuf:"varint,2,opt,name=count,proto3" json:"count"`
}

func (x *MovieSeasonGetAllResponse) Reset() {
	*x = MovieSeasonGetAllResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_season_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovieSeasonGetAllResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovieSeasonGetAllResponse) ProtoMessage() {}

func (x *MovieSeasonGetAllResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_season_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovieSeasonGetAllResponse.ProtoReflect.Descriptor instead.
func (*MovieSeasonGetAllResponse) Descriptor() ([]byte, []int) {
	return file_movie_season_proto_rawDescGZIP(), []int{11}
}

func (x *MovieSeasonGetAllResponse) GetObjects() []*MovieSeasonGetResponse {
	if x != nil {
		return x.Objects
	}
	return nil
}

func (x *MovieSeasonGetAllResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type MovieSeasonUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title            string          `protobuf:"bytes,1,opt,name=title,proto3" json:"title"`
	Trailers         []*MovieFileObj `protobuf:"bytes,2,rep,name=trailers,proto3" json:"trailers"`
	Poster           string          `protobuf:"bytes,3,opt,name=poster,proto3" json:"poster"`
	ReleaseYearStart int32           `protobuf:"varint,4,opt,name=release_year_start,json=releaseYearStart,proto3" json:"release_year_start"`
	ReleaseYearEnd   int32           `protobuf:"varint,5,opt,name=release_year_end,json=releaseYearEnd,proto3" json:"release_year_end"`
	Plot             string          `protobuf:"bytes,6,opt,name=plot,proto3" json:"plot"`
	Views            int32           `protobuf:"varint,7,opt,name=views,proto3" json:"views"`
	Status           string          `protobuf:"bytes,8,opt,name=status,proto3" json:"status"`
	Attributes       []string        `protobuf:"bytes,9,rep,name=attributes,proto3" json:"attributes"`
}

func (x *MovieSeasonUpdateRequest) Reset() {
	*x = MovieSeasonUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_season_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovieSeasonUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovieSeasonUpdateRequest) ProtoMessage() {}

func (x *MovieSeasonUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_season_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovieSeasonUpdateRequest.ProtoReflect.Descriptor instead.
func (*MovieSeasonUpdateRequest) Descriptor() ([]byte, []int) {
	return file_movie_season_proto_rawDescGZIP(), []int{12}
}

func (x *MovieSeasonUpdateRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MovieSeasonUpdateRequest) GetTrailers() []*MovieFileObj {
	if x != nil {
		return x.Trailers
	}
	return nil
}

func (x *MovieSeasonUpdateRequest) GetPoster() string {
	if x != nil {
		return x.Poster
	}
	return ""
}

func (x *MovieSeasonUpdateRequest) GetReleaseYearStart() int32 {
	if x != nil {
		return x.ReleaseYearStart
	}
	return 0
}

func (x *MovieSeasonUpdateRequest) GetReleaseYearEnd() int32 {
	if x != nil {
		return x.ReleaseYearEnd
	}
	return 0
}

func (x *MovieSeasonUpdateRequest) GetPlot() string {
	if x != nil {
		return x.Plot
	}
	return ""
}

func (x *MovieSeasonUpdateRequest) GetViews() int32 {
	if x != nil {
		return x.Views
	}
	return 0
}

func (x *MovieSeasonUpdateRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *MovieSeasonUpdateRequest) GetAttributes() []string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

type MovieSeasonUpdatePayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title            string          `protobuf:"bytes,1,opt,name=title,proto3" json:"title"`
	Trailers         []*MovieFileObj `protobuf:"bytes,2,rep,name=trailers,proto3" json:"trailers"`
	Poster           string          `protobuf:"bytes,3,opt,name=poster,proto3" json:"poster"`
	ReleaseYearStart int32           `protobuf:"varint,4,opt,name=release_year_start,json=releaseYearStart,proto3" json:"release_year_start"`
	ReleaseYearEnd   int32           `protobuf:"varint,5,opt,name=release_year_end,json=releaseYearEnd,proto3" json:"release_year_end"`
	Plot             string          `protobuf:"bytes,6,opt,name=plot,proto3" json:"plot"`
	Views            int32           `protobuf:"varint,7,opt,name=views,proto3" json:"views"`
	Status           string          `protobuf:"bytes,8,opt,name=status,proto3" json:"status"`
	Attributes       []string        `protobuf:"bytes,9,rep,name=attributes,proto3" json:"attributes"`
	SeasonNumber     int32           `protobuf:"varint,10,opt,name=season_number,json=seasonNumber,proto3" json:"season_number"`
	Slug             string          `protobuf:"bytes,11,opt,name=slug,proto3" json:"slug"`
	Lang             string          `protobuf:"bytes,13,opt,name=lang,proto3" json:"lang"`
}

func (x *MovieSeasonUpdatePayload) Reset() {
	*x = MovieSeasonUpdatePayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_season_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovieSeasonUpdatePayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovieSeasonUpdatePayload) ProtoMessage() {}

func (x *MovieSeasonUpdatePayload) ProtoReflect() protoreflect.Message {
	mi := &file_movie_season_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovieSeasonUpdatePayload.ProtoReflect.Descriptor instead.
func (*MovieSeasonUpdatePayload) Descriptor() ([]byte, []int) {
	return file_movie_season_proto_rawDescGZIP(), []int{13}
}

func (x *MovieSeasonUpdatePayload) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MovieSeasonUpdatePayload) GetTrailers() []*MovieFileObj {
	if x != nil {
		return x.Trailers
	}
	return nil
}

func (x *MovieSeasonUpdatePayload) GetPoster() string {
	if x != nil {
		return x.Poster
	}
	return ""
}

func (x *MovieSeasonUpdatePayload) GetReleaseYearStart() int32 {
	if x != nil {
		return x.ReleaseYearStart
	}
	return 0
}

func (x *MovieSeasonUpdatePayload) GetReleaseYearEnd() int32 {
	if x != nil {
		return x.ReleaseYearEnd
	}
	return 0
}

func (x *MovieSeasonUpdatePayload) GetPlot() string {
	if x != nil {
		return x.Plot
	}
	return ""
}

func (x *MovieSeasonUpdatePayload) GetViews() int32 {
	if x != nil {
		return x.Views
	}
	return 0
}

func (x *MovieSeasonUpdatePayload) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *MovieSeasonUpdatePayload) GetAttributes() []string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *MovieSeasonUpdatePayload) GetSeasonNumber() int32 {
	if x != nil {
		return x.SeasonNumber
	}
	return 0
}

func (x *MovieSeasonUpdatePayload) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *MovieSeasonUpdatePayload) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

type MovieEpisodeAddResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
}

func (x *MovieEpisodeAddResponse) Reset() {
	*x = MovieEpisodeAddResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_season_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovieEpisodeAddResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovieEpisodeAddResponse) ProtoMessage() {}

func (x *MovieEpisodeAddResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_season_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovieEpisodeAddResponse.ProtoReflect.Descriptor instead.
func (*MovieEpisodeAddResponse) Descriptor() ([]byte, []int) {
	return file_movie_season_proto_rawDescGZIP(), []int{14}
}

func (x *MovieEpisodeAddResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type MovieEpisodeGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovieSlug     string `protobuf:"bytes,1,opt,name=movie_slug,json=movieSlug,proto3" json:"movie_slug"`
	SeasonNumber  int32  `protobuf:"varint,2,opt,name=season_number,json=seasonNumber,proto3" json:"season_number"`
	EpisodeNumber int32  `protobuf:"varint,3,opt,name=episode_number,json=episodeNumber,proto3" json:"episode_number"`
	Lang          string `protobuf:"bytes,4,opt,name=lang,proto3" json:"lang"`
	UserId        string `protobuf:"bytes,5,opt,name=user_id,json=userId,proto3" json:"user_id"`
	Platform      string `protobuf:"bytes,6,opt,name=platform,proto3" json:"platform"`
	Id            string `protobuf:"bytes,7,opt,name=id,proto3" json:"id"`
}

func (x *MovieEpisodeGetRequest) Reset() {
	*x = MovieEpisodeGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_season_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovieEpisodeGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovieEpisodeGetRequest) ProtoMessage() {}

func (x *MovieEpisodeGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_season_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovieEpisodeGetRequest.ProtoReflect.Descriptor instead.
func (*MovieEpisodeGetRequest) Descriptor() ([]byte, []int) {
	return file_movie_season_proto_rawDescGZIP(), []int{15}
}

func (x *MovieEpisodeGetRequest) GetMovieSlug() string {
	if x != nil {
		return x.MovieSlug
	}
	return ""
}

func (x *MovieEpisodeGetRequest) GetSeasonNumber() int32 {
	if x != nil {
		return x.SeasonNumber
	}
	return 0
}

func (x *MovieEpisodeGetRequest) GetEpisodeNumber() int32 {
	if x != nil {
		return x.EpisodeNumber
	}
	return 0
}

func (x *MovieEpisodeGetRequest) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *MovieEpisodeGetRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MovieEpisodeGetRequest) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *MovieEpisodeGetRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type MovieSeasonEpisodesFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeasonNumber int32  `protobuf:"varint,1,opt,name=season_number,json=seasonNumber,proto3" json:"season_number"`
	MovieSlug    string `protobuf:"bytes,2,opt,name=movie_slug,json=movieSlug,proto3" json:"movie_slug"`
	Page         int32  `protobuf:"varint,3,opt,name=page,proto3" json:"page"`
	Limit        int32  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit"`
	Lang         string `protobuf:"bytes,5,opt,name=lang,proto3" json:"lang"`
}

func (x *MovieSeasonEpisodesFilter) Reset() {
	*x = MovieSeasonEpisodesFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_season_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovieSeasonEpisodesFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovieSeasonEpisodesFilter) ProtoMessage() {}

func (x *MovieSeasonEpisodesFilter) ProtoReflect() protoreflect.Message {
	mi := &file_movie_season_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovieSeasonEpisodesFilter.ProtoReflect.Descriptor instead.
func (*MovieSeasonEpisodesFilter) Descriptor() ([]byte, []int) {
	return file_movie_season_proto_rawDescGZIP(), []int{16}
}

func (x *MovieSeasonEpisodesFilter) GetSeasonNumber() int32 {
	if x != nil {
		return x.SeasonNumber
	}
	return 0
}

func (x *MovieSeasonEpisodesFilter) GetMovieSlug() string {
	if x != nil {
		return x.MovieSlug
	}
	return ""
}

func (x *MovieSeasonEpisodesFilter) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *MovieSeasonEpisodesFilter) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *MovieSeasonEpisodesFilter) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

type MovieSeasonEpisodesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Objects []*MovieEpisodes `protobuf:"bytes,1,rep,name=objects,proto3" json:"objects"`
	Count   int32            `protobuf:"varint,2,opt,name=count,proto3" json:"count"`
}

func (x *MovieSeasonEpisodesResponse) Reset() {
	*x = MovieSeasonEpisodesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_season_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovieSeasonEpisodesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovieSeasonEpisodesResponse) ProtoMessage() {}

func (x *MovieSeasonEpisodesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_season_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovieSeasonEpisodesResponse.ProtoReflect.Descriptor instead.
func (*MovieSeasonEpisodesResponse) Descriptor() ([]byte, []int) {
	return file_movie_season_proto_rawDescGZIP(), []int{17}
}

func (x *MovieSeasonEpisodesResponse) GetObjects() []*MovieEpisodes {
	if x != nil {
		return x.Objects
	}
	return nil
}

func (x *MovieSeasonEpisodesResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

var File_movie_season_proto protoreflect.FileDescriptor

var file_movie_season_proto_rawDesc = []byte{
	0x0a, 0x12, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x1a, 0x0c, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x67, 0x65, 0x6e,
	0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x6d, 0x6f, 0x76, 0x69, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x98, 0x02, 0x0a, 0x17, 0x4d, 0x6f, 0x76, 0x69, 0x65,
	0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x73, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x70, 0x69, 0x73,
	0x6f, 0x64, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0d, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x30, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x46, 0x69, 0x6c,
	0x65, 0x4f, 0x62, 0x6a, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x66, 0x69, 0x6c,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6c, 0x6f, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x6c, 0x6f, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x1d, 0x0a,
	0x0a, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x6c, 0x75, 0x67, 0x12, 0x23, 0x0a, 0x0d,
	0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x22, 0xc8, 0x01, 0x0a, 0x1a, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x45, 0x70, 0x69, 0x73, 0x6f,
	0x64, 0x65, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x4d,
	0x6f, 0x76, 0x69, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6c, 0x6f, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6c, 0x6f, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x67, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65,
	0x6e, 0x72, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xe3, 0x02, 0x0a,
	0x19, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x30, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x46, 0x69,
	0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x66, 0x69,
	0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6c, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x6c, 0x6f, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61,
	0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x25, 0x0a, 0x0e, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f,
	0x73, 0x6c, 0x75, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x76, 0x69,
	0x65, 0x53, 0x6c, 0x75, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x67, 0x6f, 0x67, 0x6f, 0x5f,
	0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x67, 0x6f, 0x67, 0x6f,
	0x49, 0x64, 0x22, 0x9a, 0x01, 0x0a, 0x19, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x45, 0x70, 0x69, 0x73,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x6c, 0x75, 0x67, 0x12,
	0x23, 0x0a, 0x0d, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x65, 0x70,
	0x69, 0x73, 0x6f, 0x64, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6c,
	0x61, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x22,
	0xa7, 0x03, 0x0a, 0x0d, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65,
	0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x70, 0x69, 0x73, 0x6f,
	0x64, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0d, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x41, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0c, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x04, 0x66, 0x69, 0x6c,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x52, 0x04,
	0x66, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6c, 0x6f, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x6c, 0x6f, 0x74, 0x12, 0x34, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x72,
	0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x2e, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x12, 0x40,
	0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09,
	0x6d, 0x65, 0x67, 0x6f, 0x67, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6d, 0x65, 0x67, 0x6f, 0x67, 0x6f, 0x49, 0x64, 0x22, 0xe8, 0x02, 0x0a, 0x18, 0x4d, 0x6f,
	0x76, 0x69, 0x65, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x38, 0x0a, 0x08,
	0x74, 0x72, 0x61, 0x69, 0x6c, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x46, 0x69,
	0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x08, 0x74, 0x72,
	0x61, 0x69, 0x6c, 0x65, 0x72, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x12, 0x2c,
	0x0a, 0x12, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x5f, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x72, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x59, 0x65, 0x61, 0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x28, 0x0a, 0x10,
	0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x5f, 0x65, 0x6e, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x59,
	0x65, 0x61, 0x72, 0x45, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6c, 0x6f, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6c, 0x6f, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x69,
	0x65, 0x77, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x69, 0x65, 0x77, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73,
	0x6c, 0x75, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x76, 0x69, 0x65,
	0x53, 0x6c, 0x75, 0x67, 0x22, 0x2f, 0x0a, 0x19, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x73, 0x6c, 0x75, 0x67, 0x22, 0x86, 0x05, 0x0a, 0x16, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x31, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x69, 0x6c, 0x65,
	0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x52,
	0x08, 0x74, 0x72, 0x61, 0x69, 0x6c, 0x65, 0x72, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x73,
	0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x65,
	0x72, 0x12, 0x2c, 0x0a, 0x12, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x79, 0x65, 0x61,
	0x72, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x72,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x59, 0x65, 0x61, 0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12,
	0x28, 0x0a, 0x10, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x5f,
	0x65, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x72, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x59, 0x65, 0x61, 0x72, 0x45, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6c, 0x6f,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6c, 0x6f, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x69, 0x65, 0x77, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x69,
	0x65, 0x77, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x41, 0x0a, 0x0d, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x40,
	0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x08, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65,
	0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x73, 0x52,
	0x08, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x76,
	0x69, 0x65, 0x5f, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d,
	0x6f, 0x76, 0x69, 0x65, 0x53, 0x6c, 0x75, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x75, 0x67,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x12, 0x12, 0x0a, 0x04,
	0x6c, 0x61, 0x6e, 0x67, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x8b,
	0x01, 0x0a, 0x15, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x75, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x12, 0x23, 0x0a, 0x0d,
	0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x65,
	0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x8f, 0x01, 0x0a,
	0x18, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x76,
	0x69, 0x65, 0x5f, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d,
	0x6f, 0x76, 0x69, 0x65, 0x53, 0x6c, 0x75, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x2e,
	0x0a, 0x18, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c,
	0x75, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x22, 0x6c,
	0x0a, 0x19, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x07, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x07, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xb5, 0x02, 0x0a,
	0x18, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x31, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x69, 0x6c, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x6f, 0x76, 0x69,
	0x65, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x52, 0x08, 0x74, 0x72, 0x61, 0x69, 0x6c, 0x65,
	0x72, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x12, 0x72, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x59,
	0x65, 0x61, 0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x72, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0e, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x59, 0x65, 0x61, 0x72, 0x45,
	0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6c, 0x6f, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x6c, 0x6f, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x69, 0x65, 0x77, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x69, 0x65, 0x77, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x22, 0x82, 0x03, 0x0a, 0x18, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x31, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x69, 0x6c,
	0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x62, 0x6a,
	0x52, 0x08, 0x74, 0x72, 0x61, 0x69, 0x6c, 0x65, 0x72, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f,
	0x73, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74,
	0x65, 0x72, 0x12, 0x2c, 0x0a, 0x12, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x79, 0x65,
	0x61, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10,
	0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x59, 0x65, 0x61, 0x72, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x12, 0x28, 0x0a, 0x10, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x79, 0x65, 0x61, 0x72,
	0x5f, 0x65, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x72, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x59, 0x65, 0x61, 0x72, 0x45, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6c,
	0x6f, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6c, 0x6f, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x69, 0x65, 0x77, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76,
	0x69, 0x65, 0x77, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a,
	0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d,
	0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x73, 0x6c, 0x75, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x22, 0x29, 0x0a, 0x17, 0x4d, 0x6f, 0x76,
	0x69, 0x65, 0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0xdc, 0x01, 0x0a, 0x16, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x45, 0x70,
	0x69, 0x73, 0x6f, 0x64, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x6c, 0x75, 0x67, 0x12, 0x23,
	0x0a, 0x0d, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x65, 0x70, 0x69,
	0x73, 0x6f, 0x64, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61,
	0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x9d, 0x01, 0x0a, 0x19, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f,
	0x73, 0x6c, 0x75, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x76, 0x69,
	0x65, 0x53, 0x6c, 0x75, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c,
	0x61, 0x6e, 0x67, 0x22, 0x65, 0x0a, 0x1b, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x30, 0x0a, 0x07, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x6f,
	0x76, 0x69, 0x65, 0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x07, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x1a, 0x5a, 0x18, 0x67, 0x65,
	0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_movie_season_proto_rawDescOnce sync.Once
	file_movie_season_proto_rawDescData = file_movie_season_proto_rawDesc
)

func file_movie_season_proto_rawDescGZIP() []byte {
	file_movie_season_proto_rawDescOnce.Do(func() {
		file_movie_season_proto_rawDescData = protoimpl.X.CompressGZIP(file_movie_season_proto_rawDescData)
	})
	return file_movie_season_proto_rawDescData
}

var file_movie_season_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_movie_season_proto_goTypes = []interface{}{
	(*MovieEpisodesAddRequest)(nil),     // 0: content.MovieEpisodesAddRequest
	(*MovieEpisodesUpdateRequest)(nil),  // 1: content.MovieEpisodesUpdateRequest
	(*MovieEpisodeUpdatePayload)(nil),   // 2: content.MovieEpisodeUpdatePayload
	(*MovieEpisodeRemoveRequest)(nil),   // 3: content.MovieEpisodeRemoveRequest
	(*MovieEpisodes)(nil),               // 4: content.MovieEpisodes
	(*MovieSeasonCreateRequest)(nil),    // 5: content.MovieSeasonCreateRequest
	(*MovieSeasonCreateResponse)(nil),   // 6: content.MovieSeasonCreateResponse
	(*MovieSeasonGetResponse)(nil),      // 7: content.MovieSeasonGetResponse
	(*MovieSeasonGetRequest)(nil),       // 8: content.MovieSeasonGetRequest
	(*MovieSeasonGetAllRequest)(nil),    // 9: content.MovieSeasonGetAllRequest
	(*MovieSeasonDeleteRequest)(nil),    // 10: content.MovieSeasonDeleteRequest
	(*MovieSeasonGetAllResponse)(nil),   // 11: content.MovieSeasonGetAllResponse
	(*MovieSeasonUpdateRequest)(nil),    // 12: content.MovieSeasonUpdateRequest
	(*MovieSeasonUpdatePayload)(nil),    // 13: content.MovieSeasonUpdatePayload
	(*MovieEpisodeAddResponse)(nil),     // 14: content.MovieEpisodeAddResponse
	(*MovieEpisodeGetRequest)(nil),      // 15: content.MovieEpisodeGetRequest
	(*MovieSeasonEpisodesFilter)(nil),   // 16: content.MovieSeasonEpisodesFilter
	(*MovieSeasonEpisodesResponse)(nil), // 17: content.MovieSeasonEpisodesResponse
	(*MovieFileObjRequest)(nil),         // 18: content.MovieFileObjRequest
	(*StatusActionRequest)(nil),         // 19: content.StatusActionRequest
	(*MovieFileObj)(nil),                // 20: content.MovieFileObj
	(*GenreCommonResponse)(nil),         // 21: content.GenreCommonResponse
	(*AttributeCommonResponse)(nil),     // 22: content.AttributeCommonResponse
}
var file_movie_season_proto_depIdxs = []int32{
	18, // 0: content.MovieEpisodesAddRequest.file:type_name -> content.MovieFileObjRequest
	18, // 1: content.MovieEpisodesUpdateRequest.file:type_name -> content.MovieFileObjRequest
	18, // 2: content.MovieEpisodeUpdatePayload.file:type_name -> content.MovieFileObjRequest
	19, // 3: content.MovieEpisodes.status_action:type_name -> content.StatusActionRequest
	20, // 4: content.MovieEpisodes.file:type_name -> content.MovieFileObj
	21, // 5: content.MovieEpisodes.genres:type_name -> content.GenreCommonResponse
	22, // 6: content.MovieEpisodes.attributes:type_name -> content.AttributeCommonResponse
	18, // 7: content.MovieSeasonCreateRequest.trailers:type_name -> content.MovieFileObjRequest
	20, // 8: content.MovieSeasonGetResponse.trailers:type_name -> content.MovieFileObj
	19, // 9: content.MovieSeasonGetResponse.status_action:type_name -> content.StatusActionRequest
	22, // 10: content.MovieSeasonGetResponse.attributes:type_name -> content.AttributeCommonResponse
	4,  // 11: content.MovieSeasonGetResponse.episodes:type_name -> content.MovieEpisodes
	7,  // 12: content.MovieSeasonGetAllResponse.objects:type_name -> content.MovieSeasonGetResponse
	20, // 13: content.MovieSeasonUpdateRequest.trailers:type_name -> content.MovieFileObj
	20, // 14: content.MovieSeasonUpdatePayload.trailers:type_name -> content.MovieFileObj
	4,  // 15: content.MovieSeasonEpisodesResponse.objects:type_name -> content.MovieEpisodes
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_movie_season_proto_init() }
func file_movie_season_proto_init() {
	if File_movie_season_proto != nil {
		return
	}
	file_common_proto_init()
	file_genre_proto_init()
	file_attribute_proto_init()
	file_movie_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_movie_season_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovieEpisodesAddRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_season_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovieEpisodesUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_season_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovieEpisodeUpdatePayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_season_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovieEpisodeRemoveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_season_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovieEpisodes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_season_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovieSeasonCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_season_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovieSeasonCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_season_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovieSeasonGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_season_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovieSeasonGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_season_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovieSeasonGetAllRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_season_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovieSeasonDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_season_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovieSeasonGetAllResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_season_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovieSeasonUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_season_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovieSeasonUpdatePayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_season_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovieEpisodeAddResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_season_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovieEpisodeGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_season_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovieSeasonEpisodesFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_season_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovieSeasonEpisodesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_movie_season_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_movie_season_proto_goTypes,
		DependencyIndexes: file_movie_season_proto_depIdxs,
		MessageInfos:      file_movie_season_proto_msgTypes,
	}.Build()
	File_movie_season_proto = out.File
	file_movie_season_proto_rawDesc = nil
	file_movie_season_proto_goTypes = nil
	file_movie_season_proto_depIdxs = nil
}
